#version 450 core
#pragma use_vulkan_memory_model
#extension GL_EXT_scalar_block_layout : enable
#extension GL_EXT_buffer_reference : enable
#extension GL_EXT_control_flow_attributes : enable
#extension GL_KHR_shader_subgroup_shuffle: enable

layout(binding=0) buffer InputA { vec4 x[]; } inputA;
layout(binding=1) buffer InputB { vec4 x[]; } inputB;
layout(binding=2) buffer InputC { vec4 x[]; } inputC;
layout(binding=3) buffer Output { vec4 x[]; } outputO;
layout(local_size_x = 64, local_size_y = 1, local_size_z = 1) in;

void main()
{
    uint id = gl_GlobalInvocationID.x+gl_GlobalInvocationID.y*(4096/256);
    vec4 a = inputA.x[id];
    vec4 acc = vec4(0.f, 0.f, 0.f, 0.f);
    for (uint i = 0; i < 100; ++i) {
      acc += subgroupShuffle(a, 0);
      acc += subgroupShuffle(a, 0);
      acc += subgroupShuffle(a, 0);
      acc += subgroupShuffle(a, 0);
      acc += subgroupShuffle(a, 0);
      acc += subgroupShuffle(a, 0);
      acc += subgroupShuffle(a, 0);
      acc += subgroupShuffle(a, 0);
      acc += subgroupShuffle(a, 0);
      acc += subgroupShuffle(a, 0);
      acc += subgroupShuffle(a, 0);
    }
    outputO.x[id] = acc;
}
